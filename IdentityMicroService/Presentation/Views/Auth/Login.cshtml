@model IdentityMicroService.Application.Services.AuthorizationDTO.UserModelForAuthorizationDto

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css"/>

<style>
    .btn {
        background-color: buttonface;
        border: 1px solid #7c7474;
        -ms-border-radius: 2px;
        border-radius: 2px;
        color: buttontext;
        cursor: default;
        font-size: 15px;
        padding: 1px 5px;
        text-decoration: auto;
    }

    .btn:hover { background-color: #d9d9d9; }

    .errorBorder {
        border-color: red;
        border-width: 3px;
    }

    .errorText { color: red; }
</style>
<script>
    $(document).ready(function () {
        var passwordMinLength = 6;
        var passwordMaxLength = 15;

        $('#submitButton').attr('disabled', true);

        function isEmail(email) {
            var regex = /^([a-zA-Z0-9_.+-]{3,20})+([@@]{1})+([a-zA-Z0-9])+([.]{1})+([a-zA-Z0-9]{2,4})+$/;
            return regex.test(email);
        }

        $('#Email').focusout(function () {
            var NameLen = $(this).val().length;
            if (NameLen == 0) {
                $(this).addClass('errorBorder');
                $("#emailSpan").html("Please, enter the email").addClass('errorText');
                $('#submitButton').attr('disabled', true);
            }
            else {
                $(this).removeClass('errorBorder');
                $("#emailSpan").html("").removeClass('errorText');
                $('#submitButton').attr('disabled', false);

                $.ajax({
                    url: '/Auth/IsEmailExitst?email=' + $('#Email').val(),
                    type: 'Get',
                    dataType: 'json',
                    success: function (html) {
                        if (!html || !isEmail($('#Email').val())) {
                            $('#Email').addClass('errorBorder');
                            if (!html) {
                                $("#emailSpan").html("User with this email doesn’t exist").addClass('errorText');
                                $('#submitButton').attr('disabled', true);
                            }
                            else if (!isEmail($('#Email').val())) {
                                $("#emailSpan").html("You've entered an invalid email").addClass('errorText');
                                $('#submitButton').attr('disabled', true);
                            }
                        }
                        else {
                            $('#Email').removeClass('errorBorder');
                            $("#emailSpan").html("").removeClass('errorText');
                            $('#submitButton').attr('disabled', false);
                        }
                    }
                });
            };
        });

        $('#Password').focusout(function () {
            var NameLen = $(this).val().length;
            if (NameLen == 0) {
                $(this).addClass('errorBorder');
                $("#passwordSpan").html("Please, enter the password").addClass('errorText');
                $('#submitButton').attr('disabled', true);
            }
            else if (NameLen < passwordMinLength) {
                $(this).addClass('errorBorder');
                $("#passwordSpan").html("Password lenght can be 6 and more char").addClass('errorText');
                $('#submitButton').attr('disabled', true);
            }
            else if (NameLen > passwordMaxLength) {
                $(this).addClass('errorBorder');
                $("#passwordSpan").html("Password lenght can be 15 and less char").addClass('errorText');
                $('#submitButton').attr('disabled', true);
            }
            else {
                $(this).removeClass('errorBorder');
                $("#passwordSpan").html("").removeClass('errorText');
                $('#submitButton').attr('disabled', false);
            }
        });

        $(document).on('click', '.toggle-password', function () {

            $(this).toggleClass("fa-eye fa-eye-slash");

            var inputPassword = $("#Password");
            inputPassword.attr('type') === 'password' ? inputPassword.attr('type', 'text') : inputPassword.attr('type', 'password')
        });
    });
</script>

<h1>LOGIN</h1>

@using (Html.BeginForm("Login", "Auth", FormMethod.Post))
{
    @Html.HiddenFor(e => e.ReturnUrl)
    <div>
        @Html.LabelFor(e => e.Email, "Email")
        @Html.TextBoxFor(e => e.Email)
        @Html.ValidationMessageFor(e => e.Email, "", new { id = "emailSpan" })
    </div>
    <div>
        @Html.LabelFor(e => e.Password, "Password")
        @Html.TextBoxFor(e => e.Password, "", new { type = "password" })
        <span toggle="#password-field" class="fa fa-fw fa-eye field_icon toggle-password"></span>
        @Html.ValidationMessageFor(e => e.Password, "", new { id = "passwordSpan" })
    </div>
    <p>
        @Html.TextBox("submitButton", "Login", new { type = "submit" })
        @Html.ActionLink("Sign Up", "SignUp", "Auth", new { ReturnUrl = Html.ValueFor(m => m.ReturnUrl) }, new { id = "signup", @class = "btn", click = "" })
    </p>
}